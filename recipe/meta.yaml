{% set version = "22.07.1" %}

package:
  name: cuquantum-python
  version: {{ version }}

source:
  url: https://github.com/NVIDIA/cuQuantum/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 0e33a518bd0ed902f0218e5eafbacb5bf1fcf7949bc923308658e35d0dc9f1fe

build:
  number: 0
  skip: true  # [win or cuda_compiler_version != "11.2" or py < 38]
  script_env:
    - CUQUANTUM_ROOT=$PREFIX
    - CUTENSOR_ROOT=$PREFIX
    - CUQUANTUM_IGNORE_SOLVER=1
  script:
    - cd python
    - {{ PYTHON }} -m pip install . --no-deps -vv
  ignore_run_exports_from:
    # let cuquantum handle the CUDA deps
    - {{ compiler('cuda') }}

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}
    - sysroot_linux-64 2.17  # [linux64]
  host:
    - python
    - pip
    - cython
    - cuquantum {{ version }}
    - packaging
  run:
    - python
    - numpy >=1.19
    - cupy >=9.5
    # cuquantum has run_exports, so we don't need to pin here
  run_constrained:
    - pytorch >=1.10
    # we don't have to pin Qiskit or Cirq here because their versions are fairly recent on conda-forge

test:
  imports:
    - cuquantum
    - cuquantum.custatevec
    - cuquantum.cutensornet

about:
  home: https://developer.nvidia.com/cuquantum-sdk
  license: BSD-3-Clause
  license_url: https://docs.nvidia.com/cuda/cuquantum/license.html#nvidia-cuquantum-python
  license_file: LICENSE
  summary: 'cuQuantum Python: Python APIs for NVIDIA cuQuantum SDK'
  description: |
    NVIDIA cuQuantum Python provides Python bindings and high-level object-oriented
    models for accessing the full functionalities of NVIDIA cuQuantum SDK from Python.
  doc_url: https://docs.nvidia.com/cuda/cuquantum/python/index.html
  dev_url: https://github.com/NVIDIA/cuQuantum

extra:
  recipe-maintainers:
    - leofang
    - JeremyWangNVDA
    - mtjrider
